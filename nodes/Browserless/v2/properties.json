[
  {
    "displayName": "Resource",
    "name": "resource",
    "type": "hidden",
    "noDataExpression": true,
    "options": [
      {
        "name": "Default",
        "value": "Default",
        "description": ""
      }
    ],
    "default": ""
  },
  {
    "displayName": "Operation",
    "name": "operation",
    "type": "options",
    "noDataExpression": true,
    "displayOptions": {
      "show": {
        "resource": [
          "Default"
        ]
      }
    },
    "options": [
      {
        "name": "Content Api",
        "value": "Content Api",
        "action": "Content API",
        "description": "Allows for simple navigation to a site and capturing the page's content (including the `<head>` section).",
        "routing": {
          "request": {
            "method": "POST",
            "url": "=/content"
          }
        }
      },
      {
        "name": "Download A File Created In The Browser",
        "value": "Download A File Created In The Browser",
        "action": "Download a file created in the browser.",
        "description": "The /download API is used for returning files Chrome has downloaded during the execution of puppeteer code, which is ran inside context of the browser.",
        "routing": {
          "request": {
            "method": "POST",
            "url": "=/download"
          }
        }
      },
      {
        "name": "Executes Custom Puppeteer Code",
        "value": "Executes Custom Puppeteer Code",
        "action": "Executes custom puppeteer code",
        "description": "Allows for `POST`ing of custom code and context to run them.",
        "routing": {
          "request": {
            "method": "POST",
            "url": "=/function"
          }
        }
      },
      {
        "name": "Takes A Screenshot Of Specified Url",
        "value": "Takes A Screenshot Of Specified Url",
        "action": "Takes a screenshot of specified URL.",
        "description": "The screenshot API allows for simple navigation to a site and capturing a screenshot. This API exposes most of puppeteer's screenshot API through the posted JSON payload.",
        "routing": {
          "request": {
            "method": "POST",
            "url": "=/screenshot"
          }
        }
      },
      {
        "name": "Unblock A Webpage",
        "value": "Unblock A Webpage",
        "action": "Unblock a webpage",
        "description": "Unblock a webpage",
        "routing": {
          "request": {
            "method": "POST",
            "url": "=/unblock"
          }
        }
      },
      {
        "name": "Scrapepage",
        "value": "Scrapepage",
        "action": "Scrapepage",
        "description": "",
        "routing": {
          "request": {
            "method": "POST",
            "url": "=/scrape"
          }
        }
      },
      {
        "name": "Gather Site Performance Data",
        "value": "Gather Site Performance Data",
        "action": "Gather site performance data",
        "description": "This API is used to gather performance metrics about a website. It is powered by Google's Lighthouse project and is compatible with its CLI options. Due to the number of checks gathered, it can take from several seconds to minutes depending on the site and size of the worker.",
        "routing": {
          "request": {
            "method": "POST",
            "url": "=/performance"
          }
        }
      },
      {
        "name": "Gather Information About Currently Running Sessions",
        "value": "Gather Information About Currently Running Sessions",
        "action": "Gather information about currently running sessions",
        "description": "This API is only available for dedicated and self-hosted accounts. It will show information of the current running sessions",
        "routing": {
          "request": {
            "method": "GET",
            "url": "=/sessions"
          }
        }
      },
      {
        "name": "Get Your Workers Configuration",
        "value": "Get Your Workers Configuration",
        "action": "Get your worker's configuration",
        "description": "The `/config` API will give you information about your worker's configuration, **and is only available for dedicated and self-hosted accounts**",
        "routing": {
          "request": {
            "method": "GET",
            "url": "=/config"
          }
        }
      },
      {
        "name": "Get Metrics Of The Session",
        "value": "Get Metrics Of The Session",
        "action": "Get metrics of the session",
        "description": "Get metrics of the session",
        "routing": {
          "request": {
            "method": "GET",
            "url": "=/metrics"
          }
        }
      },
      {
        "name": "Get Total Metrics Of All The Sessions",
        "value": "Get Total Metrics Of All The Sessions",
        "action": "Get total metrics of all the sessions",
        "description": "Get total metrics of all the sessions",
        "routing": {
          "request": {
            "method": "GET",
            "url": "=/metrics/total"
          }
        }
      }
    ],
    "default": ""
  },
  {
    "displayName": "POST /content",
    "name": "operation",
    "type": "notice",
    "typeOptions": {
      "theme": "info"
    },
    "default": "",
    "displayOptions": {
      "show": {
        "resource": [
          "Default"
        ],
        "operation": [
          "Content Api"
        ]
      }
    }
  },
  {
    "displayName": "Token",
    "name": "token",
    "required": true,
    "description": "API token",
    "default": "",
    "type": "string",
    "routing": {
      "request": {
        "qs": {
          "token": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "show": {
        "resource": [
          "Default"
        ],
        "operation": [
          "Content Api"
        ]
      }
    }
  },
  {
    "displayName": "Url",
    "name": "url",
    "type": "string",
    "default": "",
    "description": "URL to navigate to",
    "routing": {
      "request": {
        "body": {
          "url": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "/options.useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Default"
        ],
        "operation": [
          "Content Api"
        ]
      }
    }
  },
  {
    "displayName": "Reject Resource Types",
    "name": "rejectResourceTypes",
    "type": "fixedCollection",
    "default": [],
    "typeOptions": {
      "multipleValues": true
    },
    "description": "Types to be rejected",
    "placeholder": "Add item",
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "name": "Item",
            "displayName": "Item",
            "type": "string",
            "default": ""
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "rejectResourceTypes": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "/options.useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Default"
        ],
        "operation": [
          "Content Api"
        ]
      }
    }
  },
  {
    "displayName": "Reject Request Pattern",
    "name": "rejectRequestPattern",
    "type": "fixedCollection",
    "default": [],
    "typeOptions": {
      "multipleValues": true
    },
    "description": "Patterns to reject",
    "placeholder": "Add item",
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "name": "Item",
            "displayName": "Item",
            "type": "string",
            "default": ""
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "rejectRequestPattern": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "/options.useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Default"
        ],
        "operation": [
          "Content Api"
        ]
      }
    }
  },
  {
    "displayName": "Goto Options",
    "name": "gotoOptions",
    "type": "fixedCollection",
    "default": {},
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "string",
            "default": "",
            "description": "Puppeteer's GoToOptions interface",
            "name": "waitUntil",
            "displayName": "waitUntil"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "gotoOptions": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "/options.useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Default"
        ],
        "operation": [
          "Content Api"
        ]
      }
    }
  },
  {
    "displayName": "Best Attempt",
    "name": "bestAttempt",
    "type": "boolean",
    "default": true,
    "description": "Make Browserless attempt to proceed when async events fail or timeout",
    "routing": {
      "request": {
        "body": {
          "bestAttempt": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "/options.useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Default"
        ],
        "operation": [
          "Content Api"
        ]
      }
    }
  },
  {
    "displayName": "Wait For Selector",
    "name": "waitForSelector",
    "type": "fixedCollection",
    "default": {},
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "string",
            "default": "",
            "description": "Valid CSS selector",
            "name": "selector",
            "displayName": "selector"
          },
          {
            "type": "number",
            "default": 0,
            "description": "Maximum number of milliseconds to wait for the selector",
            "name": "timeout",
            "displayName": "timeout"
          },
          {
            "type": "string",
            "default": "",
            "description": "Wait for the selected element to not be found in the DOM or to be hidden",
            "name": "hidden",
            "displayName": "hidden"
          },
          {
            "type": "string",
            "default": "",
            "description": "Wait for the selected element to be present in DOM and to be visible",
            "name": "visible",
            "displayName": "visible"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "waitForSelector": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "/options.useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Default"
        ],
        "operation": [
          "Content Api"
        ]
      }
    }
  },
  {
    "displayName": "Wait For Event",
    "name": "waitForEvent",
    "type": "fixedCollection",
    "default": {},
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "string",
            "default": "",
            "description": "Event to wait for",
            "name": "event",
            "displayName": "event"
          },
          {
            "type": "number",
            "default": 0,
            "description": "Maximum number of milliseconds to wait for the event",
            "name": "timeout",
            "displayName": "timeout"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "waitForEvent": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "/options.useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Default"
        ],
        "operation": [
          "Content Api"
        ]
      }
    }
  },
  {
    "displayName": "Wait For Function",
    "name": "waitForFunction",
    "type": "fixedCollection",
    "default": {},
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "string",
            "default": "",
            "description": "Wait for the function to return. Can be any valid JavaScript or EcmaScript function.",
            "name": "fn",
            "displayName": "fn"
          },
          {
            "type": "number",
            "default": 0,
            "description": "Maximum number of milliseconds to wait for the function",
            "name": "timeout",
            "displayName": "timeout"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "waitForFunction": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "/options.useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Default"
        ],
        "operation": [
          "Content Api"
        ]
      }
    }
  },
  {
    "displayName": "Custom Body",
    "name": "customBody",
    "type": "json",
    "default": "{\n  \"url\": \"string\",\n  \"rejectResourceTypes\": [\n    \"string\"\n  ],\n  \"rejectRequestPattern\": [\n    \"string\"\n  ],\n  \"gotoOptions\": {\n    \"waitUntil\": \"string\"\n  },\n  \"bestAttempt\": true,\n  \"waitForSelector\": {\n    \"selector\": \"string\",\n    \"timeout\": 0,\n    \"hidden\": \"string\",\n    \"visible\": \"string\"\n  },\n  \"waitForEvent\": {\n    \"event\": \"string\",\n    \"timeout\": 0\n  },\n  \"waitForFunction\": {\n    \"fn\": \"string\",\n    \"timeout\": 0\n  }\n}",
    "description": "Custom body to send.",
    "routing": {
      "send": {
        "preSend": [
          "${helpers.hooks.preSendActionCustonBody}"
        ]
      }
    },
    "displayOptions": {
      "show": {
        "/options.useCustomBody": [
          true
        ],
        "resource": [
          "Default"
        ],
        "operation": [
          "Content Api"
        ]
      }
    }
  },
  {
    "displayName": "POST /download",
    "name": "operation",
    "type": "notice",
    "typeOptions": {
      "theme": "info"
    },
    "default": "",
    "displayOptions": {
      "show": {
        "resource": [
          "Default"
        ],
        "operation": [
          "Download A File Created In The Browser"
        ]
      }
    }
  },
  {
    "displayName": "Code",
    "name": "code",
    "type": "string",
    "default": "",
    "description": "The custom download code.",
    "routing": {
      "request": {
        "body": {
          "code": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "/options.useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Default"
        ],
        "operation": [
          "Download A File Created In The Browser"
        ]
      }
    }
  },
  {
    "displayName": "Context",
    "name": "context",
    "type": "json",
    "default": "{}",
    "description": "Value used to pass context values and arguments to the `code`.",
    "routing": {
      "request": {
        "body": {
          "context": "={{ JSON.parse($value) }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "/options.useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Default"
        ],
        "operation": [
          "Download A File Created In The Browser"
        ]
      }
    }
  },
  {
    "displayName": "Custom Body",
    "name": "customBody",
    "type": "json",
    "default": "{\n  \"code\": \"export default async function({page:t,context:a}){await t.evaluate(t=>{let a={url:t.url,ping:`pong`,rnd:[...Array(t.arrayLen)].map(()=>Math.random())},e=`data:application/json,${JSON.stringify(a)}`,n=encodeURI(e),r=document.createElement(`a`);return r.setAttribute(`href`,n),r.setAttribute(`download`,`data.json`),document.body.appendChild(r),r.click()},a)};\",\n  \"context\": {\n    \"url\": \"https://browserless.io/\",\n    \"arrayLen\": 10\n  }\n}",
    "description": "Custom body to send.",
    "routing": {
      "send": {
        "preSend": [
          "${helpers.hooks.preSendActionCustonBody}"
        ]
      }
    },
    "displayOptions": {
      "show": {
        "/options.useCustomBody": [
          true
        ],
        "resource": [
          "Default"
        ],
        "operation": [
          "Download A File Created In The Browser"
        ]
      }
    }
  },
  {
    "displayName": "POST /function",
    "name": "operation",
    "type": "notice",
    "typeOptions": {
      "theme": "info"
    },
    "default": "",
    "displayOptions": {
      "show": {
        "resource": [
          "Default"
        ],
        "operation": [
          "Executes Custom Puppeteer Code"
        ]
      }
    }
  },
  {
    "displayName": "Code",
    "name": "code",
    "type": "string",
    "default": "import{faker as a}from\\\"https://esm.sh/@faker-js/faker\\\";export default async function({context:o}){let t=a.internet,e=[...Array(o.len)].map(()=>({domain:t.domainName(),ip:t.ip(),mac:t.mac(),protocol:t.protocol()}));return{data:{domains:e,length:o.len},type:`application/json`}};\n",
    "description": "JavaScript code to be executed, exporting an async function.",
    "routing": {
      "request": {
        "body": {
          "code": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "/options.useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Default"
        ],
        "operation": [
          "Executes Custom Puppeteer Code"
        ]
      }
    }
  },
  {
    "displayName": "Context",
    "name": "context",
    "type": "fixedCollection",
    "default": {},
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "number",
            "default": 0,
            "name": "len",
            "displayName": "len"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "context": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "/options.useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Default"
        ],
        "operation": [
          "Executes Custom Puppeteer Code"
        ]
      }
    }
  },
  {
    "displayName": "Custom Body",
    "name": "customBody",
    "type": "json",
    "default": "{\n  \"code\": \"import{faker as a}from\\\\\\\"https://esm.sh/@faker-js/faker\\\\\\\";export default async function({context:o}){let t=a.internet,e=[...Array(o.len)].map(()=>({domain:t.domainName(),ip:t.ip(),mac:t.mac(),protocol:t.protocol()}));return{data:{domains:e,length:o.len},type:`application/json`}};\\n\",\n  \"context\": {\n    \"len\": 10\n  }\n}",
    "description": "Custom body to send.",
    "routing": {
      "send": {
        "preSend": [
          "${helpers.hooks.preSendActionCustonBody}"
        ]
      }
    },
    "displayOptions": {
      "show": {
        "/options.useCustomBody": [
          true
        ],
        "resource": [
          "Default"
        ],
        "operation": [
          "Executes Custom Puppeteer Code"
        ]
      }
    }
  },
  {
    "displayName": "POST /screenshot",
    "name": "operation",
    "type": "notice",
    "typeOptions": {
      "theme": "info"
    },
    "default": "",
    "displayOptions": {
      "show": {
        "resource": [
          "Default"
        ],
        "operation": [
          "Takes A Screenshot Of Specified Url"
        ]
      }
    }
  },
  {
    "displayName": "Url",
    "name": "url",
    "type": "string",
    "default": "",
    "description": "The URL to navigate to and capture a screenshot",
    "routing": {
      "request": {
        "body": {
          "url": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "/options.useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Default"
        ],
        "operation": [
          "Takes A Screenshot Of Specified Url"
        ]
      }
    }
  },
  {
    "displayName": "Options",
    "name": "options",
    "type": "fixedCollection",
    "default": {},
    "description": "Options available via puppeteer's Page.screenshot() method",
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "boolean",
            "default": true,
            "description": "When true, takes a screenshot of the full scrollable page",
            "name": "fullPage",
            "displayName": "fullPage"
          },
          {
            "type": "options",
            "default": "jpeg",
            "description": "Specifies the image format of the output",
            "options": [
              {
                "name": "jpeg",
                "value": "jpeg"
              },
              {
                "name": "png",
                "value": "png"
              },
              {
                "name": "webp",
                "value": "webp"
              }
            ],
            "name": "type",
            "displayName": "type"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "options": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "/options.useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Default"
        ],
        "operation": [
          "Takes A Screenshot Of Specified Url"
        ]
      }
    }
  },
  {
    "displayName": "Add Script Tag",
    "name": "addScriptTag",
    "type": "fixedCollection",
    "default": [],
    "typeOptions": {
      "multipleValues": true
    },
    "description": "Additional scripts to load",
    "placeholder": "Add item",
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "string",
            "default": "",
            "name": "url",
            "displayName": "url"
          },
          {
            "type": "string",
            "default": "",
            "name": "content",
            "displayName": "content"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "addScriptTag": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "/options.useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Default"
        ],
        "operation": [
          "Takes A Screenshot Of Specified Url"
        ]
      }
    }
  },
  {
    "displayName": "Add Style Tag",
    "name": "addStyleTag",
    "type": "fixedCollection",
    "default": [],
    "typeOptions": {
      "multipleValues": true
    },
    "description": "Additional styles to load",
    "placeholder": "Add item",
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "string",
            "default": "",
            "name": "url",
            "displayName": "url"
          },
          {
            "type": "string",
            "default": "",
            "name": "content",
            "displayName": "content"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "addStyleTag": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "/options.useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Default"
        ],
        "operation": [
          "Takes A Screenshot Of Specified Url"
        ]
      }
    }
  },
  {
    "displayName": "Reject Resource Types",
    "name": "rejectResourceTypes",
    "type": "fixedCollection",
    "default": [],
    "typeOptions": {
      "multipleValues": true
    },
    "description": "Block undesired resource types",
    "placeholder": "Add item",
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "name": "Item",
            "displayName": "Item",
            "type": "string",
            "default": ""
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "rejectResourceTypes": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "/options.useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Default"
        ],
        "operation": [
          "Takes A Screenshot Of Specified Url"
        ]
      }
    }
  },
  {
    "displayName": "Custom Body",
    "name": "customBody",
    "type": "json",
    "default": "{\n  \"url\": \"string\",\n  \"options\": {\n    \"fullPage\": true,\n    \"type\": \"jpeg\"\n  },\n  \"addScriptTag\": [\n    {\n      \"url\": \"string\",\n      \"content\": \"string\"\n    }\n  ],\n  \"addStyleTag\": [\n    {\n      \"url\": \"string\",\n      \"content\": \"string\"\n    }\n  ],\n  \"rejectResourceTypes\": [\n    \"string\"\n  ]\n}",
    "description": "Custom body to send.",
    "routing": {
      "send": {
        "preSend": [
          "${helpers.hooks.preSendActionCustonBody}"
        ]
      }
    },
    "displayOptions": {
      "show": {
        "/options.useCustomBody": [
          true
        ],
        "resource": [
          "Default"
        ],
        "operation": [
          "Takes A Screenshot Of Specified Url"
        ]
      }
    }
  },
  {
    "displayName": "POST /unblock",
    "name": "operation",
    "type": "notice",
    "typeOptions": {
      "theme": "info"
    },
    "default": "",
    "displayOptions": {
      "show": {
        "resource": [
          "Default"
        ],
        "operation": [
          "Unblock A Webpage"
        ]
      }
    }
  },
  {
    "displayName": "Url",
    "name": "url",
    "type": "string",
    "default": "https://example.com",
    "routing": {
      "request": {
        "body": {
          "url": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "/options.useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Default"
        ],
        "operation": [
          "Unblock A Webpage"
        ]
      }
    }
  },
  {
    "displayName": "Browser WS Endpoint",
    "name": "browserWSEndpoint",
    "type": "boolean",
    "default": true,
    "routing": {
      "request": {
        "body": {
          "browserWSEndpoint": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "/options.useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Default"
        ],
        "operation": [
          "Unblock A Webpage"
        ]
      }
    }
  },
  {
    "displayName": "Cookies",
    "name": "cookies",
    "type": "boolean",
    "default": true,
    "routing": {
      "request": {
        "body": {
          "cookies": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "/options.useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Default"
        ],
        "operation": [
          "Unblock A Webpage"
        ]
      }
    }
  },
  {
    "displayName": "Content",
    "name": "content",
    "type": "boolean",
    "default": false,
    "routing": {
      "request": {
        "body": {
          "content": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "/options.useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Default"
        ],
        "operation": [
          "Unblock A Webpage"
        ]
      }
    }
  },
  {
    "displayName": "Screenshot",
    "name": "screenshot",
    "type": "boolean",
    "default": false,
    "routing": {
      "request": {
        "body": {
          "screenshot": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "/options.useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Default"
        ],
        "operation": [
          "Unblock A Webpage"
        ]
      }
    }
  },
  {
    "displayName": "Ttl",
    "name": "ttl",
    "type": "number",
    "default": 30000,
    "routing": {
      "request": {
        "body": {
          "ttl": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "/options.useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Default"
        ],
        "operation": [
          "Unblock A Webpage"
        ]
      }
    }
  },
  {
    "displayName": "Wait For Event",
    "name": "waitForEvent",
    "type": "fixedCollection",
    "default": {},
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "string",
            "default": "fullscreenchange",
            "name": "event",
            "displayName": "event"
          },
          {
            "type": "number",
            "default": 5000,
            "name": "timeout",
            "displayName": "timeout"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "waitForEvent": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "/options.useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Default"
        ],
        "operation": [
          "Unblock A Webpage"
        ]
      }
    }
  },
  {
    "displayName": "Wait For Function",
    "name": "waitForFunction",
    "type": "fixedCollection",
    "default": {},
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "string",
            "default": "async() => {...}",
            "name": "fn",
            "displayName": "fn"
          },
          {
            "type": "number",
            "default": 5000,
            "name": "timeout",
            "displayName": "timeout"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "waitForFunction": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "/options.useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Default"
        ],
        "operation": [
          "Unblock A Webpage"
        ]
      }
    }
  },
  {
    "displayName": "Wait For Selector",
    "name": "waitForSelector",
    "type": "fixedCollection",
    "default": {},
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "string",
            "default": "h1",
            "name": "selector",
            "displayName": "selector"
          },
          {
            "type": "number",
            "default": 5000,
            "name": "timeout",
            "displayName": "timeout"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "waitForSelector": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "/options.useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Default"
        ],
        "operation": [
          "Unblock A Webpage"
        ]
      }
    }
  },
  {
    "displayName": "Custom Body",
    "name": "customBody",
    "type": "json",
    "default": "{\n  \"url\": \"https://example.com\",\n  \"browserWSEndpoint\": true,\n  \"cookies\": true,\n  \"content\": false,\n  \"screenshot\": false,\n  \"ttl\": 30000,\n  \"waitForEvent\": {\n    \"event\": \"fullscreenchange\",\n    \"timeout\": 5000\n  },\n  \"waitForFunction\": {\n    \"fn\": \"async() => {...}\",\n    \"timeout\": 5000\n  },\n  \"waitForSelector\": {\n    \"selector\": \"h1\",\n    \"timeout\": 5000\n  }\n}",
    "description": "Custom body to send.",
    "routing": {
      "send": {
        "preSend": [
          "${helpers.hooks.preSendActionCustonBody}"
        ]
      }
    },
    "displayOptions": {
      "show": {
        "/options.useCustomBody": [
          true
        ],
        "resource": [
          "Default"
        ],
        "operation": [
          "Unblock A Webpage"
        ]
      }
    }
  },
  {
    "displayName": "POST /scrape",
    "name": "operation",
    "type": "notice",
    "typeOptions": {
      "theme": "info"
    },
    "default": "",
    "displayOptions": {
      "show": {
        "resource": [
          "Default"
        ],
        "operation": [
          "Scrapepage"
        ]
      }
    }
  },
  {
    "displayName": "Token",
    "name": "token",
    "required": true,
    "description": "API Token",
    "default": "",
    "type": "string",
    "routing": {
      "request": {
        "qs": {
          "token": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "show": {
        "resource": [
          "Default"
        ],
        "operation": [
          "Scrapepage"
        ]
      }
    }
  },
  {
    "displayName": "Url",
    "name": "url",
    "type": "string",
    "default": "",
    "description": "webpage URL",
    "routing": {
      "request": {
        "body": {
          "url": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "/options.useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Default"
        ],
        "operation": [
          "Scrapepage"
        ]
      }
    }
  },
  {
    "displayName": "Elements",
    "name": "elements",
    "type": "fixedCollection",
    "default": [],
    "typeOptions": {
      "multipleValues": true
    },
    "description": "HTML element selector",
    "placeholder": "Add item",
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "string",
            "default": "",
            "name": "selector",
            "displayName": "selector"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "elements": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "/options.useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Default"
        ],
        "operation": [
          "Scrapepage"
        ]
      }
    }
  },
  {
    "displayName": "Goto Options",
    "name": "gotoOptions",
    "type": "fixedCollection",
    "default": {},
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "number",
            "default": 0,
            "description": "navigation timeout in milliseconds",
            "name": "timeout",
            "displayName": "timeout"
          },
          {
            "type": "string",
            "default": "",
            "description": "wait until event (optional)",
            "name": "waitUntil",
            "displayName": "waitUntil"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "gotoOptions": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "/options.useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Default"
        ],
        "operation": [
          "Scrapepage"
        ]
      }
    }
  },
  {
    "displayName": "Wait For Timeout",
    "name": "waitForTimeout",
    "type": "number",
    "default": 0,
    "description": "wait for a given number of milliseconds before continue execution. (optional)",
    "routing": {
      "request": {
        "body": {
          "waitForTimeout": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "/options.useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Default"
        ],
        "operation": [
          "Scrapepage"
        ]
      }
    }
  },
  {
    "displayName": "Wait For Selector",
    "name": "waitForSelector",
    "type": "fixedCollection",
    "default": {},
    "description": "wait for a selector to appear in page. (optional)",
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "string",
            "default": "",
            "name": "selector",
            "displayName": "selector"
          },
          {
            "type": "number",
            "default": 0,
            "name": "timeout",
            "displayName": "timeout"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "waitForSelector": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "/options.useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Default"
        ],
        "operation": [
          "Scrapepage"
        ]
      }
    }
  },
  {
    "displayName": "Wait For Function",
    "name": "waitForFunction",
    "type": "fixedCollection",
    "default": {},
    "description": "waits for the provided function to return before continue. (optional)",
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "string",
            "default": "",
            "name": "fn",
            "displayName": "fn"
          },
          {
            "type": "number",
            "default": 0,
            "name": "timeout",
            "displayName": "timeout"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "waitForFunction": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "/options.useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Default"
        ],
        "operation": [
          "Scrapepage"
        ]
      }
    }
  },
  {
    "displayName": "Wait For Event",
    "name": "waitForEvent",
    "type": "fixedCollection",
    "default": {},
    "description": "waits for an event to happen on the page before continue. (optional)",
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "string",
            "default": "",
            "name": "event",
            "displayName": "event"
          },
          {
            "type": "number",
            "default": 0,
            "name": "timeout",
            "displayName": "timeout"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "waitForEvent": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "/options.useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Default"
        ],
        "operation": [
          "Scrapepage"
        ]
      }
    }
  },
  {
    "displayName": "Custom Body",
    "name": "customBody",
    "type": "json",
    "default": "{\n  \"url\": \"string\",\n  \"elements\": [\n    {\n      \"selector\": \"string\"\n    }\n  ],\n  \"gotoOptions\": {\n    \"timeout\": 0,\n    \"waitUntil\": \"string\"\n  },\n  \"waitForTimeout\": 0,\n  \"waitForSelector\": {\n    \"selector\": \"string\",\n    \"timeout\": 0\n  },\n  \"waitForFunction\": {\n    \"fn\": \"string\",\n    \"timeout\": 0\n  },\n  \"waitForEvent\": {\n    \"event\": \"string\",\n    \"timeout\": 0\n  }\n}",
    "description": "Custom body to send.",
    "routing": {
      "send": {
        "preSend": [
          "${helpers.hooks.preSendActionCustonBody}"
        ]
      }
    },
    "displayOptions": {
      "show": {
        "/options.useCustomBody": [
          true
        ],
        "resource": [
          "Default"
        ],
        "operation": [
          "Scrapepage"
        ]
      }
    }
  },
  {
    "displayName": "POST /performance",
    "name": "operation",
    "type": "notice",
    "typeOptions": {
      "theme": "info"
    },
    "default": "",
    "displayOptions": {
      "show": {
        "resource": [
          "Default"
        ],
        "operation": [
          "Gather Site Performance Data"
        ]
      }
    }
  },
  {
    "displayName": "Url",
    "name": "url",
    "type": "string",
    "default": "",
    "description": "The URL of the website to gather performance metrics from",
    "routing": {
      "request": {
        "body": {
          "url": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "/options.useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Default"
        ],
        "operation": [
          "Gather Site Performance Data"
        ]
      }
    }
  },
  {
    "displayName": "Config",
    "name": "config",
    "type": "json",
    "default": "{\n  \"extends\": \"lighthouse:default\",\n  \"settings\": {\n    \"onlyCategories\": [\n      null\n    ]\n  }\n}",
    "description": "Specifies the options for the performance data gathering",
    "routing": {
      "request": {
        "body": {
          "config": "={{ JSON.parse($value) }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "/options.useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Default"
        ],
        "operation": [
          "Gather Site Performance Data"
        ]
      }
    }
  },
  {
    "displayName": "Custom Body",
    "name": "customBody",
    "type": "json",
    "default": "{\n  \"url\": \"string\",\n  \"config\": {\n    \"extends\": \"lighthouse:default\",\n    \"settings\": {\n      \"onlyCategories\": [\n        \"string\"\n      ],\n      \"onlyAudits\": \"string\"\n    }\n  }\n}",
    "description": "Custom body to send.",
    "routing": {
      "send": {
        "preSend": [
          "${helpers.hooks.preSendActionCustonBody}"
        ]
      }
    },
    "displayOptions": {
      "show": {
        "/options.useCustomBody": [
          true
        ],
        "resource": [
          "Default"
        ],
        "operation": [
          "Gather Site Performance Data"
        ]
      }
    }
  },
  {
    "displayName": "GET /sessions",
    "name": "operation",
    "type": "notice",
    "typeOptions": {
      "theme": "info"
    },
    "default": "",
    "displayOptions": {
      "show": {
        "resource": [
          "Default"
        ],
        "operation": [
          "Gather Information About Currently Running Sessions"
        ]
      }
    }
  },
  {
    "displayName": "Token",
    "name": "token",
    "required": true,
    "description": "API token",
    "default": "",
    "type": "string",
    "routing": {
      "request": {
        "qs": {
          "token": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "show": {
        "resource": [
          "Default"
        ],
        "operation": [
          "Gather Information About Currently Running Sessions"
        ]
      }
    }
  },
  {
    "displayName": "GET /config",
    "name": "operation",
    "type": "notice",
    "typeOptions": {
      "theme": "info"
    },
    "default": "",
    "displayOptions": {
      "show": {
        "resource": [
          "Default"
        ],
        "operation": [
          "Get Your Workers Configuration"
        ]
      }
    }
  },
  {
    "displayName": "Token",
    "name": "token",
    "required": true,
    "default": "MY_API_TOKEN",
    "type": "string",
    "routing": {
      "request": {
        "qs": {
          "token": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "show": {
        "resource": [
          "Default"
        ],
        "operation": [
          "Get Your Workers Configuration"
        ]
      }
    }
  },
  {
    "displayName": "GET /metrics",
    "name": "operation",
    "type": "notice",
    "typeOptions": {
      "theme": "info"
    },
    "default": "",
    "displayOptions": {
      "show": {
        "resource": [
          "Default"
        ],
        "operation": [
          "Get Metrics Of The Session"
        ]
      }
    }
  },
  {
    "displayName": "Token",
    "name": "token",
    "description": "API token to authenticate the request",
    "default": "MY_API_TOKEN",
    "type": "string",
    "routing": {
      "request": {
        "qs": {
          "token": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "show": {
        "resource": [
          "Default"
        ],
        "operation": [
          "Get Metrics Of The Session"
        ]
      }
    }
  },
  {
    "displayName": "GET /metrics/total",
    "name": "operation",
    "type": "notice",
    "typeOptions": {
      "theme": "info"
    },
    "default": "",
    "displayOptions": {
      "show": {
        "resource": [
          "Default"
        ],
        "operation": [
          "Get Total Metrics Of All The Sessions"
        ]
      }
    }
  },
  {
    "displayName": "Token",
    "name": "token",
    "description": "API token to authenticate the request",
    "default": "MY_API_TOKEN",
    "type": "string",
    "routing": {
      "request": {
        "qs": {
          "token": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "show": {
        "resource": [
          "Default"
        ],
        "operation": [
          "Get Total Metrics Of All The Sessions"
        ]
      }
    }
  }
]