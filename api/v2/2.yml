openapi: 3.0.1
info:
  title: Browserless API
  version: v2
servers:
  - url: 'https://production-sfo.browserless.io'
  - url: 'https://production-lon.browserless.io'
paths:
  /download:
    post:
      summary: Download file from Puppeteer script
      operationId: download
      description: Invoke Puppeteer script code and download any files created within the context of the browser.
      requestBody:
        required: true
        content:
          application/javascript:
            schema:
              type: string
              example: |
                export default function ({ page }){
                  await page.evaluate(() => {
                    const json = {
                      ping: "pong",
                      rnd: [...Array(5)].map(() => Math.random())
                    }
                    const jsonContent = `data:application/json,${JSON.stringify(json)}`;
                    const encodedUri = encodeURI(jsonContent);
                    const link = document.createElement('a');

                    link.setAttribute('href', encodedUri);
                    link.setAttribute('download', 'data.json');
                    document.body.appendChild(link);
                    return link.click();
                  });
                }
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  description: Custom download code
                context:
                  type: object
                  description: Value used to pass context values and arguments to the `code`
                  properties:
                    url:
                      type: string
                      description: The URL to be used in the context
                    arrayLen:
                      type: integer
                      description: Length of the random array
              required:
                - code
                - context
              example:
                code: "async function({page:t,context:a}){await t.evaluate(t=>{let a={url:t.url,ping:`pong`,rnd:[...Array(t.arrayLen)].map(()=>Math.random())},e=`data:application/json,${JSON.stringify(a)}`,n=encodeURI(e),r=document.createElement(`a`);return r.setAttribute(`href`,n),r.setAttribute(`download`,`data.json`),document.body.appendChild(r),r.click()},a)};"
                context:
                  url: "https://browserless.io/"
                  arrayLen: 10
      responses:
        200:
          description: File created by Puppeteer code
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        400:
          description: Invalid request
        500:
          description: Server error
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: query
      name: token
security:
  - ApiKeyAuth: []
