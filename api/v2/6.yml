openapi: 3.0.0
info:
  title: /unblock API
  version: v2
paths:
  /unblock:
    post:
      summary: Unblock page
      operationId: unblock
      description: API designed to bypass bot detection mechanisms such as Cloudflare, Datadome and other passive CAPTCHAs.
      parameters:
        - in: query
          name: token
          schema:
            type: string
          description: Token to be used for authentication.
        - in: query
          name: proxy
          schema:
            type: string
          description: The proxy type set for the request.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnblockRequest'
            example:
              url: 'https://example.com/'
              browserWSEndpoint: false
              cookies: false
              content: true
              screenshot: false
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnblockResponse'
              example:
                browserWSEndpoint: 'wss://production-sfo.browserless.io/e/53616c7465645f5fa57aca44763bd816bb1aa1f1210ed871a908fd60235848ce6e4bcc0a8fcfe08c6d96eff8d68d556e/devtools/browser/646b292c-bd2a-4964-af18-9c1a6081c32e'
                content: '<!DOCTYPE html><html>...</html>'
                cookies: []
                screenshot: null
                ttl: 60000
components:
  schemas:
    UnblockRequest:
      type: object
      properties:
        url:
          type: string
          description:  URL of the site to be unblocked
        browserWSEndpoint:
          type: boolean
          description: If set to true, a connection with the browser instance is created
        cookies:
          type: boolean
          description: If set to true, cookies are included in the response
        content:
          type: boolean
          description: If set to true, page HTML is included in the response
        screenshot:
          type: boolean
          description: If set to true, screenshot of the page is included in the response
        ttl:
          type: integer
          description: Duration before expiring the created endpoint, applicable only if browserWSEndpoint is true
    UnblockResponse:
      type: object
      properties:
        browserWSEndpoint:
          type: string
          description: Endpoint where a WebSocket can be created
        content:
          type: string
          description: Entire HTML of the unblocked page
        cookies:
          type: array
          items:
            type: string
            description: Cookies associated with the requested page
        screenshot:
          type: string
          description: Base64 of the captured screenshot, if requested
        ttl:
          type: integer
          description: Expiry of the generated endpoint
